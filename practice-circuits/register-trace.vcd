$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 # clk_in $end
  $var wire 1 $ n_rst_in $end
  $var wire 1 % seq_in $end
  $var wire 1 & seq_out $end
  $var wire 1 ' shift_r $end
  $var wire 1 ( shift_l $end
  $var wire 4 ) parallel_in [3:0] $end
  $var wire 4 * parallel_out [3:0] $end
  $var wire 1 + parallel_load $end
  $scope module shift_register $end
   $var wire 1 # clk_in $end
   $var wire 1 $ n_rst_in $end
   $var wire 1 % seq_in $end
   $var wire 1 & seq_out $end
   $var wire 1 ' shift_r $end
   $var wire 1 ( shift_l $end
   $var wire 4 ) parallel_in [3:0] $end
   $var wire 4 * parallel_out [3:0] $end
   $var wire 1 + parallel_load $end
   $var wire 4 , reg_val [3:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
0$
0%
0&
1'
0(
b0000 )
b0000 *
0+
b0000 ,
#1
0#
1$
#2
1#
0'
1(
#3
0#
1'
0(
#4
1#
#5
0#
1%
0'
1(
#6
1#
b0001 *
b0001 ,
#7
0#
0%
1'
0(
#8
1#
1&
b0000 *
b0000 ,
#9
0#
1%
0'
1(
#10
1#
0%
0&
1'
0(
#11
0#
1%
0'
1(
#12
1#
0%
1'
0(
#13
0#
0'
1(
#14
1#
#15
0#
1%
#16
1#
b0001 *
b0001 ,
#17
0#
0%
#18
1#
b0010 *
b0010 ,
#19
0#
#20
1#
1%
1'
0(
b1001 *
b1001 ,
#21
0#
0%
0'
1(
#22
1#
1%
1&
b0011 *
b0011 ,
#23
0#
0%
#24
1#
0&
b0110 *
b0110 ,
#25
0#
1%
1'
0(
#26
1#
b1011 *
b1011 ,
#27
0#
0%
0'
1(
#28
1#
1%
1&
b0111 *
b0111 ,
#29
0#
#30
1#
1'
0(
b1011 *
b1011 ,
#31
0#
#32
1#
0'
1(
b0111 *
b0111 ,
#33
0#
0%
#34
1#
1%
0&
b1111 *
b1111 ,
#35
0#
#36
1#
0%
1&
b1110 *
b1110 ,
#37
0#
1'
0(
#38
1#
0'
1(
b1100 *
b1100 ,
#39
0#
1%
#40
1#
0&
1'
0(
b1110 *
b1110 ,
#41
0#
#42
1#
1&
0'
1(
b1101 *
b1101 ,
#43
0#
0%
1'
0(
#44
1#
1%
0'
1(
b1011 *
b1011 ,
#45
0#
1'
0(
#46
1#
b1101 *
b1101 ,
#47
0#
0%
#48
1#
1%
b1110 *
b1110 ,
#49
0#
#50
1#
0'
1(
b1101 *
b1101 ,
#51
0#
0%
#52
1#
1%
1'
0(
b1110 *
b1110 ,
#53
0#
0'
1(
#54
1#
0&
1'
0(
b1111 *
b1111 ,
#55
0#
0'
1(
#56
1#
1&
1'
0(
#57
0#
0'
1(
#58
1#
0%
b1110 *
b1110 ,
#59
0#
1%
#60
1#
0%
0&
1'
0(
b0111 *
b0111 ,
#61
0#
#62
1#
1&
b0011 *
b0011 ,
#63
0#
1%
0'
1(
#64
1#
0&
b0111 *
b0111 ,
#65
0#
0%
#66
1#
b1110 *
b1110 ,
#67
0#
#68
1#
1'
0(
b0111 *
b0111 ,
#69
0#
1%
0'
1(
#70
1#
0%
b1110 *
b1110 ,
#71
0#
#72
1#
1'
0(
b0111 *
b0111 ,
#73
0#
1%
#74
1#
0%
0'
1(
b1110 *
b1110 ,
#75
0#
1'
0(
#76
1#
1&
0'
1(
b1100 *
b1100 ,
#77
0#
1'
0(
#78
1#
1%
0&
b1110 *
b1110 ,
#79
0#
0%
#80
1#
b0111 *
b0111 ,
#81
0#
1%
#82
1#
0'
1(
b1111 *
b1111 ,
#83
0#
1'
0(
#84
1#
0%
1&
b0111 *
b0111 ,
#85
0#
#86
1#
0&
0'
1(
b1110 *
b1110 ,
#87
0#
1%
1'
0(
#88
1#
1&
0'
1(
b1101 *
b1101 ,
#89
0#
#90
1#
0%
1'
0(
b0110 *
b0110 ,
#91
0#
1%
#92
1#
0%
0&
0'
1(
b1100 *
b1100 ,
#93
0#
1%
1'
0(
#94
1#
b1110 *
b1110 ,
#95
0#
0%
#96
1#
1&
0'
1(
b1100 *
b1100 ,
#97
0#
1%
1'
0(
#98
1#
0%
0&
b0110 *
b0110 ,
#99
0#
1%
#100
1#
0$
0'
1(
b0000 *
b0000 ,
#101
0#
1$
1'
0(
#102
1#
0%
#103
0#
1%
#104
1#
0'
1(
b0001 *
b0001 ,
#105
0#
0%
#106
1#
1%
b0011 *
b0011 ,
#107
0#
#108
1#
0%
b0110 *
b0110 ,
#109
0#
#110
1#
1%
1'
0(
b1011 *
b1011 ,
#111
0#
#112
1#
0%
1&
0'
1(
b0110 *
b0110 ,
#113
0#
1%
1'
0(
#114
1#
0%
0&
b0011 *
b0011 ,
#115
0#
1%
#116
1#
0'
1(
b0111 *
b0111 ,
#117
0#
0%
#118
1#
1%
1&
1'
0(
b1011 *
b1011 ,
#119
0#
0%
0'
1(
#120
1#
1'
0(
b0101 *
b0101 ,
#121
0#
0'
1(
#122
1#
1%
0&
b1011 *
b1011 ,
#123
0#
#124
1#
0%
1&
b0110 *
b0110 ,
#125
0#
1'
0(
#126
1#
0&
b0011 *
b0011 ,
#127
0#
1%
#128
1#
0%
0'
1(
b0110 *
b0110 ,
#129
0#
#130
1#
1%
1'
0(
b1011 *
b1011 ,
#131
0#
#132
1#
1&
b1101 *
b1101 ,
#133
0#
0%
#134
1#
b0110 *
b0110 ,
#135
0#
0'
1(
#136
1#
1%
0&
1'
0(
b1011 *
b1011 ,
#137
0#
0%
#138
1#
1%
1&
0'
1(
b0111 *
b0111 ,
#139
0#
0%
#140
1#
1%
0&
b1111 *
b1111 ,
#141
0#
#142
1#
1&
#143
0#
1'
0(
#144
1#
0%
b0111 *
b0111 ,
#145
0#
0'
1(
#146
1#
1%
1'
0(
b1011 *
b1011 ,
#147
0#
0'
1(
#148
1#
0%
1'
0(
b0101 *
b0101 ,
#149
0#
1%
#150
1#
0%
0&
0'
1(
b1010 *
b1010 ,
#151
0#
1%
1'
0(
#152
1#
1&
0'
1(
b0101 *
b0101 ,
#153
0#
#154
1#
0&
b1011 *
b1011 ,
#155
0#
#156
1#
1&
b0111 *
b0111 ,
#157
0#
1'
0(
#158
1#
0%
0&
0'
1(
b1110 *
b1110 ,
#159
0#
#160
1#
1&
b1100 *
b1100 ,
#161
0#
1%
1'
0(
#162
1#
0'
1(
b1001 *
b1001 ,
#163
0#
1'
0(
#164
1#
0%
0'
1(
b0010 *
b0010 ,
#165
0#
#166
1#
1%
0&
1'
0(
b1001 *
b1001 ,
#167
0#
0%
#168
1#
1&
b0100 *
b0100 ,
#169
0#
1%
0'
1(
#170
1#
0&
1'
0(
b1010 *
b1010 ,
#171
0#
#172
1#
0%
b0101 *
b0101 ,
#173
0#
1%
0'
1(
#174
1#
b1011 *
b1011 ,
#175
0#
#176
1#
1&
1'
0(
b1101 *
b1101 ,
#177
0#
0%
0'
1(
#178
1#
b1010 *
b1010 ,
#179
0#
1%
1'
0(
#180
1#
0%
0&
b0101 *
b0101 ,
#181
0#
1%
#182
1#
1&
b1010 *
b1010 ,
#183
0#
#184
1#
0&
b1101 *
b1101 ,
#185
0#
0'
1(
#186
1#
0%
1&
1'
0(
b0110 *
b0110 ,
#187
0#
1%
0'
1(
#188
1#
0&
1'
0(
b1011 *
b1011 ,
#189
0#
0%
#190
1#
1%
1&
0'
1(
b0111 *
b0111 ,
#191
0#
1'
0(
#192
1#
b1011 *
b1011 ,
#193
0#
#194
1#
0%
b0101 *
b0101 ,
#195
0#
1%
#196
1#
0%
0&
0'
1(
b1010 *
b1010 ,
#197
0#
#198
1#
1&
b0100 *
b0100 ,
#199
0#
1'
0(
#200
1#
0$
b0000 *
b0000 ,
#201
0#
1$
1%
#202
1#
0&
b1000 *
b1000 ,
#203
0#
0%
0'
1(
#204
1#
1%
1&
b0001 *
b0001 ,
#205
0#
1'
0(
#206
1#
0%
0&
0'
1(
b0010 *
b0010 ,
#207
0#
1%
1'
0(
#208
1#
0%
b0001 *
b0001 ,
#209
0#
1%
0'
1(
#210
1#
1&
1'
0(
b1000 *
b1000 ,
#211
0#
#212
1#
0%
0'
1(
b0000 *
b0000 ,
#213
0#
1'
0(
#214
1#
1%
0&
b1000 *
b1000 ,
#215
0#
#216
1#
0%
b0100 *
b0100 ,
#217
0#
1%
0'
1(
#218
1#
1'
0(
b1010 *
b1010 ,
#219
0#
0%
#220
1#
1%
b1101 *
b1101 ,
#221
0#
0'
1(
#222
1#
0%
1&
1'
0(
b0110 *
b0110 ,
#223
0#
#224
1#
0&
0'
1(
b1100 *
b1100 ,
#225
0#
1'
0(
#226
1#
1%
b1110 *
b1110 ,
#227
0#
0%
0'
1(
#228
1#
1'
0(
b0111 *
b0111 ,
#229
0#
1%
#230
1#
0'
1(
b1111 *
b1111 ,
#231
0#
0%
1'
0(
#232
1#
1%
1&
0'
1(
#233
0#
0%
#234
1#
1%
1'
0(
#235
0#
0%
#236
1#
0'
1(
b1110 *
b1110 ,
#237
0#
1%
#238
1#
0%
b1100 *
b1100 ,
#239
0#
#240
1#
b1000 *
b1000 ,
#241
0#
#242
1#
1%
b0001 *
b0001 ,
#243
0#
#244
1#
0%
0&
b0010 *
b0010 ,
#245
0#
1'
0(
#246
1#
1%
0'
1(
b0101 *
b0101 ,
#247
0#
0%
#248
1#
1&
1'
0(
b0010 *
b0010 ,
#249
0#
0'
1(
#250
1#
0&
b0100 *
b0100 ,
#251
0#
#252
1#
1%
1'
0(
b1010 *
b1010 ,
#253
0#
#254
1#
1&
0'
1(
b0101 *
b0101 ,
#255
0#
0%
#256
1#
0&
b1010 *
b1010 ,
#257
0#
1'
0(
#258
1#
b0101 *
b0101 ,
#259
0#
#260
1#
0'
1(
b1010 *
b1010 ,
#261
0#
1'
0(
#262
1#
1%
1&
0'
1(
b0101 *
b0101 ,
#263
0#
#264
1#
0%
0&
b1010 *
b1010 ,
#265
0#
1%
#266
1#
1'
0(
b1101 *
b1101 ,
#267
0#
0%
#268
1#
1&
0'
1(
b1010 *
b1010 ,
#269
0#
1%
#270
1#
b0101 *
b0101 ,
#271
0#
#272
1#
0%
1'
0(
b0010 *
b0010 ,
#273
0#
#274
1#
1%
0&
b1001 *
b1001 ,
#275
0#
0%
#276
1#
1%
1&
0'
1(
b0011 *
b0011 ,
#277
0#
#278
1#
0&
b0111 *
b0111 ,
#279
0#
1'
0(
#280
1#
1&
b1011 *
b1011 ,
#281
0#
0'
1(
#282
1#
b0111 *
b0111 ,
#283
0#
#284
1#
0&
b1111 *
b1111 ,
#285
0#
0%
#286
1#
1&
1'
0(
b0111 *
b0111 ,
#287
0#
1%
#288
1#
b1011 *
b1011 ,
#289
0#
0%
#290
1#
1%
b1101 *
b1101 ,
#291
0#
#292
1#
0%
0'
1(
b1010 *
b1010 ,
#293
0#
1%
1'
0(
#294
1#
0'
1(
b0101 *
b0101 ,
#295
0#
0%
#296
1#
1%
0&
b1011 *
b1011 ,
#297
0#
0%
1'
0(
#298
1#
1&
0'
1(
b0110 *
b0110 ,
#299
0#
1'
0(
